// Code generated by mockery. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// PanicOnNoReturnValue is an autogenerated mock type for the PanicOnNoReturnValue type
type PanicOnNoReturnValue struct {
	mock.Mock
}

type PanicOnNoReturnValue_Expecter struct {
	mock *mock.Mock
}

func (_m *PanicOnNoReturnValue) EXPECT() *PanicOnNoReturnValue_Expecter {
	return &PanicOnNoReturnValue_Expecter{mock: &_m.Mock}
}

// DoSomething provides a mock function with no fields
func (_m *PanicOnNoReturnValue) DoSomething() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for DoSomething")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// PanicOnNoReturnValue_DoSomething_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DoSomething'
type PanicOnNoReturnValue_DoSomething_Call struct {
	*mock.Call
}

// DoSomething is a helper method to define mock.On call
func (_e *PanicOnNoReturnValue_Expecter) DoSomething() *PanicOnNoReturnValue_DoSomething_Call {
	return &PanicOnNoReturnValue_DoSomething_Call{Call: _e.mock.On("DoSomething")}
}

func (_c *PanicOnNoReturnValue_DoSomething_Call) Run(run func()) *PanicOnNoReturnValue_DoSomething_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *PanicOnNoReturnValue_DoSomething_Call) Return(_a0 string) *PanicOnNoReturnValue_DoSomething_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *PanicOnNoReturnValue_DoSomething_Call) RunAndReturn(run func() string) *PanicOnNoReturnValue_DoSomething_Call {
	_c.Call.Return(run)
	return _c
}

// NewPanicOnNoReturnValue creates a new instance of PanicOnNoReturnValue. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPanicOnNoReturnValue(t interface {
	mock.TestingT
	Cleanup(func())
}) *PanicOnNoReturnValue {
	mock := &PanicOnNoReturnValue{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
