// Code generated by mockery. DO NOT EDIT.

package type_alias_test

import (
	mock "github.com/stretchr/testify/mock"
	type_alias "github.com/vektra/mockery/v2/pkg/fixtures/type_alias"
)

// InterfaceWithUnresolvedAlias is an autogenerated mock type for the Interface1 type
type InterfaceWithUnresolvedAlias struct {
	mock.Mock
}

type InterfaceWithUnresolvedAlias_Expecter struct {
	mock *mock.Mock
}

func (_m *InterfaceWithUnresolvedAlias) EXPECT() *InterfaceWithUnresolvedAlias_Expecter {
	return &InterfaceWithUnresolvedAlias_Expecter{mock: &_m.Mock}
}

// Foo provides a mock function with no fields
func (_m *InterfaceWithUnresolvedAlias) Foo() type_alias.Type {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Foo")
	}

	var r0 type_alias.Type
	if rf, ok := ret.Get(0).(func() type_alias.Type); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(type_alias.Type)
	}

	return r0
}

// InterfaceWithUnresolvedAlias_Foo_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Foo'
type InterfaceWithUnresolvedAlias_Foo_Call struct {
	*mock.Call
}

// Foo is a helper method to define mock.On call
func (_e *InterfaceWithUnresolvedAlias_Expecter) Foo() *InterfaceWithUnresolvedAlias_Foo_Call {
	return &InterfaceWithUnresolvedAlias_Foo_Call{Call: _e.mock.On("Foo")}
}

func (_c *InterfaceWithUnresolvedAlias_Foo_Call) Run(run func()) *InterfaceWithUnresolvedAlias_Foo_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *InterfaceWithUnresolvedAlias_Foo_Call) Return(_a0 type_alias.Type) *InterfaceWithUnresolvedAlias_Foo_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *InterfaceWithUnresolvedAlias_Foo_Call) RunAndReturn(run func() type_alias.Type) *InterfaceWithUnresolvedAlias_Foo_Call {
	_c.Call.Return(run)
	return _c
}

// NewInterfaceWithUnresolvedAlias creates a new instance of InterfaceWithUnresolvedAlias. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewInterfaceWithUnresolvedAlias(t interface {
	mock.TestingT
	Cleanup(func())
}) *InterfaceWithUnresolvedAlias {
	mock := &InterfaceWithUnresolvedAlias{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
